5.버블버블
#include <stdio.h>
int main() {
    int n, temp, cnt1 = 0, cnt2 = 0;
    scanf("%d", &n); // n값입력
    int a[n], b[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]); // n의 크기의 배열 a를 0번째 공간부터 입력받기
        b[i] = a[i]; // 배열 b에 배열 a값 넣기
     }
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (a[j] < a[j + 1]) {
                cnt1++;
                temp = a[j + 1];
                a[j + 1] = a[j];
                a[j] = temp;
            }                         // 배열 a를 버블정렬을 통해 옆에있는 공간과 비교하며 내림차순으로 만들고 걸리는 실행횟수 cnt1에 1씩 더하기
        }
    }
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (b[j] > b[j + 1]) {
                cnt2++;
                temp = b[j + 1];
                b[j + 1] = b[j];
                b[j] = temp;
            }
        }
    }                                // 배열 a와 같았던 b를 반대로 버블정렬로 오름차순으로 만들고 걸리는 실행 횟수 cnt2에 1씩 더하기
    if (cnt1 + 1 <= cnt2) {
        printf("%d\n", cnt1 + 1); // 만약 cnt1+1이 cnt2보다 작거나 같다면 cnt+1값을 출력하기
    } else {
        printf("%d\n", cnt2); // 아니라면 cnt2값 출력하기
    }   
    return 0;
}
이 문제는 배열 a를 버블정렬을 이용해 오름차순으로 만드는 최소횟수를 구하는 문제로 오름차순을 만드는방법은 오름차순을 바로 구하거나 내림차순으로 바꾼뒤 배열을 뒤집는 방법이있는데 배열을 뒤집는것도 횟수에 포함되기때문에
내림차순으로 바꾸고 배열을 뒤집는 cnt1+1과 바로 오름차순으로 만드는 cnt2중에 더작은값을 출력하면 최소휫수를 구할수있다.
